{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAY,SAAS,aAAa,CAAC,eACnC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAe,SAAS,aAAa,CAAC,kBAE5C,SAAS,IACH,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAAI,EAChC,EAAa,YAAY,CAAC,WAAY,CAAA,GAEtC,EAAa,eAAe,CAAC,YAG3B,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAAI,GAChC,EAAa,YAAY,CAAC,WAAY,CAAA,GAEtC,EAAa,eAAe,CAAC,YAG3B,EAAM,IAAI,CAAC,MAAM,EAAI,EACvB,EAAU,YAAY,CAAC,WAAY,CAAA,GAEnC,EAAU,eAAe,CAAC,YAGxB,EAAM,IAAI,CAAC,MAAM,EAAI,GACvB,EAAU,YAAY,CAAC,WAAY,CAAA,GAEnC,EAAU,eAAe,CAAC,WAE9B,CAEA,EAAa,gBAAgB,CAAC,QAAS,WACjC,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAG,IAC9B,EAAG,EAAM,IAAI,EAAE,OAAO,CAAC,SAAC,CAD3B,EAEI,IAAM,EAAe,SAAS,aAAa,CAAC,MAE5C,EAAI,MAAM,CAAC,EACb,GAEF,GACF,GAEA,EAAa,gBAAgB,CAAC,QAAS,WACjC,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAG,GAC9B,EAAG,EAAM,IAAI,EAAE,OAAO,CAAC,SAAC,CAD3B,EAEI,EAAI,gBAAgB,CAAC,MAAM,EAC7B,GAEF,GACF,GAEA,EAAU,gBAAgB,CAAC,QAAS,WAC9B,EAAM,IAAI,CAAC,MAAM,CAAG,IACtB,EAAM,MAAM,CAAC,EAAM,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA,IAEvC,GACF,GAEA,EAAU,gBAAgB,CAAC,QAAS,WAC9B,EAAM,IAAI,CAAC,MAAM,CAAG,GACtB,EAAM,gBAAgB,CAAC,MAAM,GAE/B,GACF,GAEA","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar tbody = document.querySelector(\"tbody\");\nvar appendRow = document.querySelector(\".append-row\");\nvar removeRow = document.querySelector(\".remove-row\");\nvar appendColumn = document.querySelector(\".append-column\");\nvar removeColumn = document.querySelector(\".remove-column\");\nfunction updateButtonsState() {\n    if (tbody.rows[0].cells.length <= 2) removeColumn.setAttribute(\"disabled\", true);\n    else removeColumn.removeAttribute(\"disabled\");\n    if (tbody.rows[0].cells.length >= 10) appendColumn.setAttribute(\"disabled\", true);\n    else appendColumn.removeAttribute(\"disabled\");\n    if (tbody.rows.length <= 2) removeRow.setAttribute(\"disabled\", true);\n    else removeRow.removeAttribute(\"disabled\");\n    if (tbody.rows.length >= 10) appendRow.setAttribute(\"disabled\", true);\n    else appendRow.removeAttribute(\"disabled\");\n}\nappendColumn.addEventListener(\"click\", function() {\n    if (tbody.rows[0].cells.length < 10) _to_consumable_array(tbody.rows).forEach(function(row) {\n        var newTdElement = document.createElement(\"td\");\n        row.append(newTdElement);\n    });\n    updateButtonsState();\n});\nremoveColumn.addEventListener(\"click\", function() {\n    if (tbody.rows[0].cells.length > 2) _to_consumable_array(tbody.rows).forEach(function(row) {\n        row.lastElementChild.remove();\n    });\n    updateButtonsState();\n});\nappendRow.addEventListener(\"click\", function() {\n    if (tbody.rows.length < 10) tbody.append(tbody.rows[0].cloneNode(true));\n    updateButtonsState();\n});\nremoveRow.addEventListener(\"click\", function() {\n    if (tbody.rows.length > 2) tbody.lastElementChild.remove();\n    updateButtonsState();\n});\nupdateButtonsState();\n\n//# sourceMappingURL=index.c52d62ef.js.map\n","'use strict';\n\nconst tbody = document.querySelector('tbody');\nconst appendRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\nconst appendColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\n\nfunction updateButtonsState() {\n  if (tbody.rows[0].cells.length <= 2) {\n    removeColumn.setAttribute('disabled', true);\n  } else {\n    removeColumn.removeAttribute('disabled');\n  }\n\n  if (tbody.rows[0].cells.length >= 10) {\n    appendColumn.setAttribute('disabled', true);\n  } else {\n    appendColumn.removeAttribute('disabled');\n  }\n\n  if (tbody.rows.length <= 2) {\n    removeRow.setAttribute('disabled', true);\n  } else {\n    removeRow.removeAttribute('disabled');\n  }\n\n  if (tbody.rows.length >= 10) {\n    appendRow.setAttribute('disabled', true);\n  } else {\n    appendRow.removeAttribute('disabled');\n  }\n}\n\nappendColumn.addEventListener('click', () => {\n  if (tbody.rows[0].cells.length < 10) {\n    [...tbody.rows].forEach((row) => {\n      const newTdElement = document.createElement('td');\n\n      row.append(newTdElement);\n    });\n  }\n  updateButtonsState();\n});\n\nremoveColumn.addEventListener('click', () => {\n  if (tbody.rows[0].cells.length > 2) {\n    [...tbody.rows].forEach((row) => {\n      row.lastElementChild.remove();\n    });\n  }\n  updateButtonsState();\n});\n\nappendRow.addEventListener('click', () => {\n  if (tbody.rows.length < 10) {\n    tbody.append(tbody.rows[0].cloneNode(true));\n  }\n  updateButtonsState();\n});\n\nremoveRow.addEventListener('click', () => {\n  if (tbody.rows.length > 2) {\n    tbody.lastElementChild.remove();\n  }\n  updateButtonsState();\n});\n\nupdateButtonsState();\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","tbody","document","querySelector","appendRow","removeRow","appendColumn","removeColumn","updateButtonsState","rows","cells","setAttribute","removeAttribute","addEventListener","forEach","row","newTdElement","createElement","append","lastElementChild","remove","cloneNode"],"version":3,"file":"index.c52d62ef.js.map"}